name: Deploy API

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  workflow_dispatch:

env: 
  AWS_REGION: us-west-2
  SHORT_SHA: $(echo ${{ github.sha }} | cut -c 1-8)

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
  
      #- name: Build, tag, and push image to Amazon ECR
      #  env:
      #    ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #    ECR_REPOSITORY: teste
      #    IMAGE_TAG: ${{ github.sha }}
      #  run: |
      #    docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
      #    docker push -a $ECR_REGISTRY/$ECR_REPOSITORY
  
      - name: Install and configure kubectl
        run: |
          VERSION=$(curl --silent https://storage.googleapis.com/kubernetes-release/release/stable.txt)
          # https://github.com/aws/aws-cli/issues/6920#issuecomment-1117981158
          VERSION=v1.23.6
          curl https://storage.googleapis.com/kubernetes-release/release/$VERSION/bin/linux/amd64/kubectl \
            --progress-bar \
            --location \
            --remote-name
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/
          echo ${{ secrets.KUBECONFIG }} | base64 --decode > kubeconfig.yaml

      - name: Update kube config
        run: aws eks update-kubeconfig --name totem-eks --region us-west-2
    
     # - name: Deploy
     #   env:
     #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
     #   run: |
     #     export ECR_REPOSITORY=${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}
     #     export IMAGE_TAG=latest
     #     export KUBECONFIG=kubeconfig.yaml          
     #     kubectl apply -f -


      # Deploy newly built changes to EKS cluster.
      - name: Deploy To Cluster
        shell: bash
        run: kubectl apply -n default -f k8s/
          
     
